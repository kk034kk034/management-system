// utils/sse_helper.js
/**
 * SSE ‰∫ã‰ª∂Êé®ÈÄÅ:
 * sendToApp() & sendObjectToAppSingle() ËÆìË®≠ÂÇôÊï∏ÊìöÂèØ‰ª•Êé®ÈÄÅÂà∞ÊâÄÊúâÈóúËÅØÁî®Êà∂Ôºå‰∏¶ÊîØÊè¥ÂñÆ‰∏ÄË®≠ÂÇôÂõûÊáâ„ÄÇ
 */
import { DeviceBind, UserRole } from '../models/index.js'
import { clients } from './shared_state.js'

export const sendToApp = async (tagName, jsonData, deviceID) => {
  try {
    const data_json = JSON.stringify(jsonData)

    // ‚úÖ Â¶ÇÊûú `serialNo` Â≠òÂú®ÔºåÂâáÂè™ÁôºÈÄÅÁµ¶ÁâπÂÆö `sn` ÁöÑÂÆ¢Êà∂Á´Ø
    let serialNo = jsonData.serialNo || 0
    if (serialNo > 0) {
      clients.forEach((c) => {
        if (serialNo === c.sn) {
          console.log(`üì§ [SSE] ÂñÆ‰∏ÄÁôºÈÄÅÊï∏ÊìöÁµ¶ sn=${serialNo}`)
          c.res.write(`event: ${tagName}\ndata: ${data_json}\n\n`)
        }
      })
      return
    }

    // ‚úÖ Êü•Ë©¢ `DeviceBind`ÔºåÁ¢∫Ë™çË®≠ÂÇôÊòØÂê¶Â≠òÂú®
    const foundDevice = await DeviceBind.findOne({
      where: { client_id: deviceID }
    })
    if (!foundDevice) {
      console.log(`‚ö†Ô∏è [SSE] Êâæ‰∏çÂà∞Ë®≠ÂÇô ${deviceID}`)
      return
    }

    // ‚úÖ ÈÄôË£°ÊáâË©≤ÊòØÊåáÂéüÊú¨ÁöÑshareÂäüËÉΩÔºå‰πüÂ∞±ÊòØÁèæÂú®ÁöÑorgÂÖßÁî®Êà∂ÈÉΩË¶ÅÊî∂Âà∞
    const organizationId = foundDevice.organization_id // ÂèñÂæóË£ùÁΩÆÊâÄÂ±¨ org_id
    const userRoles = await UserRole.findAll({
      // ÊâæÂá∫Ê≠§ org_id Â∫ï‰∏ãÊâÄÊúâ‰ΩøÁî®ËÄÖ id
      where: { organization_id: organizationId },
      attributes: ['user_id']
    })
    const sharedUserIds = userRoles.map((ur) => ur.user_id)
    // ÈÅçÊ≠∑ `clients`ÔºåÊâæÂà∞Á¨¶Âêà `user_id` ÁöÑÁî®Êà∂‰∏¶Êé®ÈÄÅÊï∏Êìö
    clients.forEach((c) => {
      if (sharedUserIds.includes(c.id)) {
        console.log(`üì§ [SSE] ÁôºÈÄÅÊï∏ÊìöÁµ¶Áî®Êà∂ ${c.id}`)
        c.res.write(`event: ${tagName}\ndata: ${data_json}\n\n`)
      }
    })
  } catch (error) {
    console.error(`‚ùå [SSE] sendToApp Âá∫ÈåØ: ${error.message}`)
  }
}

export const sendObjectToAppSingle = async (tagName, jsonData, userId, sn) => {
  try {
    const data_json = JSON.stringify(jsonData)
    clients.forEach((client) => {
      if (client.id === userId && client.sn === sn) {
        client.res.write(`event: ${tagName}\ndata: ${data_json}\n\n`)
      }
    })
  } catch (error) {
    console.error(`‚ùå SSE Single Error: ${error.message}`)
  }
}
// dummy for CodeRabbit

// dummy for CodeRabbit
